{"version":3,"sources":["styles/GeneralInfoFormStyles.js","components/GeneralInfoForm.js","styles/GeneralInfoStyles.js","components/GeneralInfo.js","styles/EducationInfoFormStyles.js","components/EducationInfoForm.js","styles/EducationInfoStyles.js","components/EducationInfo.js","styles/WorkInfoFormStyles.js","components/WorkInfoForm.js","styles/WorkInfoStyles.js","components/WorkInfo.js","components/MadeBy.js","styles/AppStyles.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","root","display","flexDirection","alignItems","justifyContent","margin","maxWidth","avatar","spacing","backgroundColor","palette","secondary","main","container","withStyles","withTheme","fName","lName","email","phone","handleChange","handleSubmit","classes","onSubmit","className","Avatar","Grid","item","xs","sm","TextField","required","id","name","label","value","onChange","color","fullWidth","autoComplete","Button","type","variant","size","textAlign","GeneralInfo","props","state","isEditing","toggleEdit","bind","e","this","setState","target","preventDefault","Fragment","Typography","component","gutterBottom","onClick","Component","school","title","date","EducationInfo","company","position","tasks","startDate","endDate","WorkInfo","MadeBy","align","Link","href","Date","getFullYear","height","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","info","paper","App","CssBaseline","md","Paper","elevation","square","Box","mt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uVAkBeA,EAlBA,SAACC,GAAD,MAAY,CACzBC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,wBACRC,SAAU,SAEZC,OAAQ,CACNF,OAAQN,EAAMS,QAAQ,GACtBC,gBAAiBV,EAAMW,QAAQC,UAAUC,MAE3CC,UAAW,CACTR,OAAQ,OCkEGS,kBAAWhB,EAAQ,CAAEiB,WAAW,GAAhCD,EAxEf,YAQI,IAPFE,EAOC,EAPDA,MACAC,EAMC,EANDA,MACAC,EAKC,EALDA,MACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,aACAC,EACC,EADDA,QAEA,OACE,0BAAMC,SAAUF,EAAcG,UAAWF,EAAQtB,MAC/C,kBAACyB,EAAA,EAAD,CAAQD,UAAWF,EAAQf,SAC3B,kBAACmB,EAAA,EAAD,CAAMb,WAAS,EAACL,QAAS,EAAGgB,UAAWF,EAAQT,WAC7C,kBAACa,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,QACHC,KAAK,QACLC,MAAM,aACNC,MAAOnB,EACPoB,SAAUhB,EACViB,MAAM,YACNC,WAAS,EACTC,aAAa,gBAGjB,kBAACb,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,QACHC,KAAK,QACLC,MAAM,YACNC,MAAOlB,EACPmB,SAAUhB,EACViB,MAAM,YACNC,WAAS,EACTC,aAAa,iBAIjB,kBAACb,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOjB,EACPkB,SAAUhB,EACViB,MAAM,YACNC,WAAS,KAGb,kBAACZ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,QACHC,KAAK,QACLC,MAAM,eACNC,MAAOhB,EACPiB,SAAUhB,EACViB,MAAM,YACNC,WAAS,MAIf,kBAACE,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,YAAYL,MAAM,YAAYM,KAAK,SAAjE,cCzDS7C,EAhBA,SAACC,GAAD,MAAY,CACzBC,KAAM,CACJC,QAAS,OACTG,eAAgB,SAChBD,WAAY,SACZD,cAAe,SACfG,OAAQ,wBACRuC,UAAW,SACXtC,SAAU,SAEZC,OAAQ,CACNF,OAAQN,EAAMS,QAAQ,GACtBC,gBAAiBV,EAAMW,QAAQC,UAAUC,QCJhCiC,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX/B,MAAO,OACPC,MAAO,QACPC,MAAO,uBACPC,MAAO,iBACP6B,WAAW,GAEb,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAK9B,aAAe,EAAKA,aAAa8B,KAAlB,gBACpB,EAAK7B,aAAe,EAAKA,aAAa6B,KAAlB,gBAXH,EADrB,yDAeeC,GACXC,KAAKC,SAAL,eAAiBF,EAAEG,OAAOrB,KAAOkB,EAAEG,OAAOnB,UAhB9C,mCAmBegB,GACXA,EAAEI,iBACFH,KAAKH,eArBT,mCAyBIG,KAAKC,SAAS,CAAEL,WAAYI,KAAKL,MAAMC,cAzB3C,+BA4BY,IAAD,EAC2CI,KAAKL,MAA/C/B,EADD,EACCA,MAAOC,EADR,EACQA,MAAOC,EADf,EACeA,MAAOC,EADtB,EACsBA,MAAO6B,EAD7B,EAC6BA,UAC5B1B,EAAY8B,KAAKN,MAAjBxB,QACR,OACE,kBAAC,IAAMkC,SAAP,KACGR,EACC,kBAAC,EAAD,CACEhC,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACPC,aAAcgC,KAAKhC,aACnBC,aAAc+B,KAAK/B,eAGrB,yBAAKG,UAAWF,EAAQtB,MACtB,kBAACyB,EAAA,EAAD,CAAQD,UAAWF,EAAQf,SAC3B,kBAACkD,EAAA,EAAD,CAAYC,UAAU,KAAKhB,QAAQ,KAAKiB,cAAY,GACjD3C,EADH,IACWC,GAEX,kBAACwC,EAAA,EAAD,CAAYf,QAAQ,aAApB,SACA,kBAACe,EAAA,EAAD,CAAYE,cAAY,GAAEzC,GAC1B,kBAACuC,EAAA,EAAD,CAAYf,QAAQ,aAApB,gBACA,kBAACe,EAAA,EAAD,CAAYE,cAAY,GAAExC,GAC1B,kBAACqB,EAAA,EAAD,CACEE,QAAQ,WACRL,MAAM,YACNM,KAAK,QACLiB,QAASR,KAAKH,YAJhB,cApDZ,GAAiCY,aAmElB/C,cAAWhB,EAAQ,CAAEiB,WAAW,GAAhCD,CAAwC+B,GC7DxC/C,EAdA,CACbE,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,wBACRC,SAAU,SAEZO,UAAW,CACTR,OAAQ,eCwDGS,kBAAWhB,EAAXgB,EA1Df,YAOI,IANFgD,EAMC,EANDA,OACAC,EAKC,EALDA,MACAC,EAIC,EAJDA,KACA5C,EAGC,EAHDA,aACAC,EAEC,EAFDA,aACAC,EACC,EADDA,QAEA,OACE,0BAAMC,SAAUF,EAAcG,UAAWF,EAAQtB,MAC/C,kBAACyD,EAAA,EAAD,CAAYC,UAAU,KAAKhB,QAAQ,MAAnC,kBAGA,kBAAChB,EAAA,EAAD,CAAMb,WAAS,EAACL,QAAS,EAAGgB,UAAWF,EAAQT,WAC7C,kBAACa,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,SACHC,KAAK,SACLC,MAAM,SACNC,MAAO2B,EACP1B,SAAUhB,EACViB,MAAM,YACNC,WAAS,KAGb,kBAACZ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAO4B,EACP3B,SAAUhB,EACViB,MAAM,YACNC,WAAS,KAGb,kBAACZ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,OACHC,KAAK,OACLC,MAAM,OACNC,MAAO6B,EACP5B,SAAUhB,EACViB,MAAM,YACNC,WAAS,MAIf,kBAACE,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,YAAYL,MAAM,YAAYM,KAAK,SAAjE,cC/CS7C,EAZA,CACbE,KAAM,CACJC,QAAS,OACTG,eAAgB,SAChBD,WAAY,SACZD,cAAe,SACfG,OAAQ,mBACRuC,UAAW,SACXtC,SAAU,UCDD2D,EAAb,kDACE,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXe,OAAQ,wCACRC,MAAO,uBACPC,KAAM,OACNhB,WAAW,GAEb,EAAK5B,aAAe,EAAKA,aAAa8B,KAAlB,gBACpB,EAAK7B,aAAe,EAAKA,aAAa6B,KAAlB,gBACpB,EAAKD,WAAa,EAAKA,WAAWC,KAAhB,gBAVD,EADrB,yDAceC,GACXC,KAAKC,SAAL,eAAiBF,EAAEG,OAAOrB,KAAOkB,EAAEG,OAAOnB,UAf9C,mCAkBegB,GACXA,EAAEI,iBACFH,KAAKH,eApBT,mCAwBIG,KAAKC,SAAS,CAAEL,WAAYI,KAAKL,MAAMC,cAxB3C,+BA2BY,IAAD,EACoCI,KAAKL,MAAxCe,EADD,EACCA,OAAQC,EADT,EACSA,MAAOC,EADhB,EACgBA,KAAMhB,EADtB,EACsBA,UACrB1B,EAAY8B,KAAKN,MAAjBxB,QACR,OACE,kBAAC,IAAMkC,SAAP,KACGR,EACC,kBAAC,EAAD,CACEc,OAAQA,EACRC,MAAOA,EACPC,KAAMA,EACN5C,aAAcgC,KAAKhC,aACnBC,aAAc+B,KAAK/B,eAGrB,yBAAKG,UAAWF,EAAQtB,MACtB,kBAACyD,EAAA,EAAD,CAAYC,UAAU,KAAKhB,QAAQ,KAAKiB,cAAY,GAApD,aAGA,kBAACF,EAAA,EAAD,CAAYf,QAAQ,aAApB,UACA,kBAACe,EAAA,EAAD,CAAYE,cAAY,GAAEG,GAC1B,kBAACL,EAAA,EAAD,CAAYf,QAAQ,aAApB,kBACA,kBAACe,EAAA,EAAD,CAAYE,cAAY,GAAEI,GAC1B,kBAACN,EAAA,EAAD,CAAYf,QAAQ,aAApB,SACA,kBAACe,EAAA,EAAD,CAAYE,cAAY,GAAEK,GAC1B,kBAACxB,EAAA,EAAD,CACEE,QAAQ,WACRL,MAAM,YACNM,KAAK,QACLiB,QAASR,KAAKH,YAJhB,cAnDZ,GAAmCY,aAkEpB/C,cAAWhB,EAAXgB,CAAmBmD,GC3DnBnE,EAdA,CACbE,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,qBACRC,SAAU,SAEZO,UAAW,CACTR,OAAQ,eCkFGS,kBAAWhB,EAAXgB,EApFf,YASI,IARFoD,EAQC,EARDA,QACAC,EAOC,EAPDA,SACAC,EAMC,EANDA,MACAC,EAKC,EALDA,UACAC,EAIC,EAJDA,QACAlD,EAGC,EAHDA,aACAC,EAEC,EAFDA,aACAC,EACC,EADDA,QAEA,OACE,0BAAMC,SAAUF,EAAcG,UAAWF,EAAQtB,MAC/C,kBAACyD,EAAA,EAAD,CAAYC,UAAU,KAAKhB,QAAQ,MAAnC,mBAGA,kBAAChB,EAAA,EAAD,CAAMb,WAAS,EAACL,QAAS,EAAGgB,UAAWF,EAAQT,WAC7C,kBAACa,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,UACHC,KAAK,UACLC,MAAM,UACNC,MAAO+B,EACP9B,SAAUhB,EACViB,MAAM,YACNC,WAAS,KAGb,kBAACZ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,YACHC,KAAK,YACLC,MAAM,aACNC,MAAOkC,EACPjC,SAAUhB,EACViB,MAAM,YACNC,WAAS,KAGb,kBAACZ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,UACHC,KAAK,UACLC,MAAM,WACNC,MAAOmC,EACPlC,SAAUhB,EACViB,MAAM,YACNC,WAAS,KAGb,kBAACZ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNC,MAAOgC,EACP/B,SAAUhB,EACViB,MAAM,YACNC,WAAS,KAGb,kBAACZ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOiC,EACPhC,SAAUhB,EACViB,MAAM,YACNC,WAAS,MAIf,kBAACE,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,YAAYL,MAAM,YAAYM,KAAK,SAAjE,cCzES7C,EAZA,CACbE,KAAM,CACJC,QAAS,OACTG,eAAgB,SAChBD,WAAY,SACZD,cAAe,SACfG,OAAQ,SACRuC,UAAW,SACXtC,SAAU,UCDDiE,EAAb,kDACE,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXmB,QAAS,oBACTC,SAAU,sBACVC,MACE,0JACFC,UAAW,UACXC,QAAS,UACTtB,WAAW,GAEb,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAK9B,aAAe,EAAKA,aAAa8B,KAAlB,gBACpB,EAAK7B,aAAe,EAAKA,aAAa6B,KAAlB,gBAbH,EADrB,yDAkBIE,KAAKC,SAAS,CAAEL,WAAYI,KAAKL,MAAMC,cAlB3C,mCAqBeG,GACXC,KAAKC,SAAL,eAAiBF,EAAEG,OAAOrB,KAAOkB,EAAEG,OAAOnB,UAtB9C,mCAyBegB,GACXA,EAAEI,iBACFH,KAAKH,eA3BT,+BA8BY,IAAD,EAQHG,KAAKL,MANPmB,EAFK,EAELA,QACAC,EAHK,EAGLA,SACAC,EAJK,EAILA,MACAC,EALK,EAKLA,UACAC,EANK,EAMLA,QACAtB,EAPK,EAOLA,UAEM1B,EAAY8B,KAAKN,MAAjBxB,QACR,OACE,kBAAC,IAAMkC,SAAP,KACGR,EACC,kBAAC,EAAD,CACEkB,QAASA,EACTC,SAAUA,EACVC,MAAOA,EACPC,UAAWA,EACXC,QAASA,EACTlD,aAAcgC,KAAKhC,aACnBC,aAAc+B,KAAK/B,eAGrB,yBAAKG,UAAWF,EAAQtB,MACtB,kBAACyD,EAAA,EAAD,CAAYC,UAAU,KAAKhB,QAAQ,KAAKiB,cAAY,GAApD,cAGA,kBAACF,EAAA,EAAD,CAAYf,QAAQ,aAApB,WACA,kBAACe,EAAA,EAAD,CAAYE,cAAY,GAAEO,GAC1B,kBAACT,EAAA,EAAD,CAAYf,QAAQ,aAApB,yBACA,kBAACe,EAAA,EAAD,CAAYE,cAAY,GACrBU,EADH,MACiBC,GAEjB,kBAACb,EAAA,EAAD,CAAYf,QAAQ,aAApB,YACA,kBAACe,EAAA,EAAD,CAAYE,cAAY,GAAEQ,GAC1B,kBAACV,EAAA,EAAD,CAAYf,QAAQ,aAApB,SACA,kBAACe,EAAA,EAAD,CAAYE,cAAY,GAAES,GAC1B,kBAAC5B,EAAA,EAAD,CACEE,QAAQ,WACRL,MAAM,YACNM,KAAK,QACLiB,QAASR,KAAKH,YAJhB,cAnEZ,GAA8BY,aAkFf/C,cAAWhB,EAAXgB,CAAmByD,G,QCzEnBC,MAZf,WACE,OACE,kBAACf,EAAA,EAAD,CAAYf,QAAQ,QAAQ+B,MAAM,UAChC,kBAACC,EAAA,EAAD,CAAMrC,MAAM,UAAUsC,KAAK,8CAA3B,YAEQ,KACP,IAAIC,MAAOC,cACX,MCWQ/E,EAtBA,SAACC,GAAD,MAAY,CACzBC,KAAM,CACJ8E,OAAQ,SAEVC,MAAO,CACLC,gBAAiB,0CACjBC,iBAAkB,YAClBxE,gBAAiBV,EAAMW,QAAQwE,KAAK,KACpCC,eAAgB,QAChBC,mBAAoB,UAEtBC,KAAM,CACJ5E,gBAAiB,SAEnB6E,MAAO,CACLjF,OAAQN,EAAMS,QAAQ,EAAG,GACzBP,QAAS,OACTC,cAAe,SACfC,WAAY,YCNHoF,EAAb,uKACY,IACAjE,EAAY8B,KAAKN,MAAjBxB,QACR,OACE,kBAACI,EAAA,EAAD,CAAMb,WAAS,EAAC6C,UAAU,OAAOlC,UAAWF,EAAQtB,MAClD,kBAACwF,EAAA,EAAD,MACA,kBAAC9D,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAG4D,GAAI,EAAGjE,UAAWF,EAAQyD,QACnD,kBAACrD,EAAA,EAAD,CACEC,MAAI,EACJC,GAAI,EACJC,GAAI,EACJ4D,GAAI,EACJjE,UAAWF,EAAQ+D,KACnB3B,UAAWgC,IACXC,UAAW,EACXC,QAAM,GAEN,kBAAClE,EAAA,EAAD,CAAMb,WAAS,EAAC6C,UAAU,UAAUlC,UAAWF,EAAQgE,OACrD,kBAAC5D,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAI4D,GAAI,IAC7B,kBAAC,EAAD,OAEF,kBAAC/D,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAI4D,GAAI,IAC7B,kBAAC,EAAD,OAEF,kBAAC/D,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAI4D,GAAI,IAC7B,kBAAC,EAAD,OAEF,kBAACI,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,cA5Bd,GAAyBjC,aAqCV/C,cAAWhB,EAAQ,CAAEiB,WAAW,GAAhCD,CAAwCyE,GCrCnCQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.534503b5.chunk.js","sourcesContent":["const styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: '2rem 1rem 2.2rem 1rem',\n    maxWidth: '600px',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  container: {\n    margin: '0',\n  },\n});\n\nexport default styles;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from '../styles/GeneralInfoFormStyles';\n\nfunction GeneralInfoForm({\n  fName,\n  lName,\n  email,\n  phone,\n  handleChange,\n  handleSubmit,\n  classes,\n}) {\n  return (\n    <form onSubmit={handleSubmit} className={classes.root}>\n      <Avatar className={classes.avatar} />\n      <Grid container spacing={3} className={classes.container}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"fName\"\n            name=\"fName\"\n            label=\"First name\"\n            value={fName}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n            autoComplete=\"given-name\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"lName\"\n            name=\"lName\"\n            label=\"Last name\"\n            value={lName}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n            autoComplete=\"family-name\"\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            value={email}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"phone\"\n            name=\"phone\"\n            label=\"Phone Number\"\n            value={phone}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n      </Grid>\n      <Button type=\"submit\" variant=\"contained\" color=\"secondary\" size=\"small\">\n        Submit\n      </Button>\n    </form>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(GeneralInfoForm);\n","const styles = (theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    margin: '2rem 1rem 1.4rem 1rem',\n    textAlign: 'center',\n    maxWidth: '600px',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n});\n\nexport default styles;\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport GeneralInfoForm from './GeneralInfoForm';\nimport styles from '../styles/GeneralInfoStyles';\n\nexport class GeneralInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fName: 'John',\n      lName: 'Smith',\n      email: 'john.smith@email.com',\n      phone: '(620) 454-1799',\n      isEditing: false,\n    };\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.toggleEdit();\n  }\n\n  toggleEdit() {\n    this.setState({ isEditing: !this.state.isEditing });\n  }\n\n  render() {\n    const { fName, lName, email, phone, isEditing } = this.state;\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        {isEditing ? (\n          <GeneralInfoForm\n            fName={fName}\n            lName={lName}\n            email={email}\n            phone={phone}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n          />\n        ) : (\n          <div className={classes.root}>\n            <Avatar className={classes.avatar} />\n            <Typography component=\"h1\" variant=\"h4\" gutterBottom>\n              {fName} {lName}\n            </Typography>\n            <Typography variant=\"subtitle2\">Email</Typography>\n            <Typography gutterBottom>{email}</Typography>\n            <Typography variant=\"subtitle2\">Phone Number</Typography>\n            <Typography gutterBottom>{phone}</Typography>\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={this.toggleEdit}\n            >\n              Edit\n            </Button>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(GeneralInfo);\n","const styles = {\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: '0rem 1rem 2.2rem 1rem',\n    maxWidth: '600px',\n  },\n  container: {\n    margin: '0 0 1rem 0',\n  },\n};\n\nexport default styles;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from '../styles/EducationInfoFormStyles';\n\nfunction EducationInfoForm({\n  school,\n  title,\n  date,\n  handleChange,\n  handleSubmit,\n  classes,\n}) {\n  return (\n    <form onSubmit={handleSubmit} className={classes.root}>\n      <Typography component=\"h1\" variant=\"h5\">\n        Edit Education\n      </Typography>\n      <Grid container spacing={3} className={classes.container}>\n        <Grid item xs={12} sm={12}>\n          <TextField\n            required\n            id=\"school\"\n            name=\"school\"\n            label=\"School\"\n            value={school}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={8} sm={8}>\n          <TextField\n            required\n            id=\"title\"\n            name=\"title\"\n            label=\"Title\"\n            value={title}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={4} sm={4}>\n          <TextField\n            required\n            id=\"date\"\n            name=\"date\"\n            label=\"Date\"\n            value={date}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n      </Grid>\n      <Button type=\"submit\" variant=\"contained\" color=\"secondary\" size=\"small\">\n        Submit\n      </Button>\n    </form>\n  );\n}\n\nexport default withStyles(styles)(EducationInfoForm);\n","const styles = {\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    margin: '0 1rem 2rem 1rem',\n    textAlign: 'center',\n    maxWidth: '600px',\n  },\n};\n\nexport default styles;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport EducationInfoForm from './EducationInfoForm';\nimport styles from '../styles/EducationInfoStyles';\n\nexport class EducationInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      school: 'Massachusetts Institute of Technology',\n      title: 'Software Engineering',\n      date: '2019',\n      isEditing: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleEdit = this.toggleEdit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.toggleEdit();\n  }\n\n  toggleEdit() {\n    this.setState({ isEditing: !this.state.isEditing });\n  }\n\n  render() {\n    const { school, title, date, isEditing } = this.state;\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        {isEditing ? (\n          <EducationInfoForm\n            school={school}\n            title={title}\n            date={date}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n          />\n        ) : (\n          <div className={classes.root}>\n            <Typography component=\"h1\" variant=\"h5\" gutterBottom>\n              Education\n            </Typography>\n            <Typography variant=\"subtitle2\">School</Typography>\n            <Typography gutterBottom>{school}</Typography>\n            <Typography variant=\"subtitle2\">Title of Study</Typography>\n            <Typography gutterBottom>{title}</Typography>\n            <Typography variant=\"subtitle2\">Class</Typography>\n            <Typography gutterBottom>{date}</Typography>\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={this.toggleEdit}\n            >\n              Edit\n            </Button>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(EducationInfo);\n","const styles = {\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: '0 1rem 0.4rem 1rem',\n    maxWidth: '600px',\n  },\n  container: {\n    margin: '0 0 1rem 0',\n  },\n};\n\nexport default styles;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from '../styles/WorkInfoFormStyles';\n\nfunction WorkInfoForm({\n  company,\n  position,\n  tasks,\n  startDate,\n  endDate,\n  handleChange,\n  handleSubmit,\n  classes,\n}) {\n  return (\n    <form onSubmit={handleSubmit} className={classes.root}>\n      <Typography component=\"h1\" variant=\"h5\">\n        Edit Experience\n      </Typography>\n      <Grid container spacing={3} className={classes.container}>\n        <Grid item xs={6} sm={6}>\n          <TextField\n            required\n            id=\"company\"\n            name=\"company\"\n            label=\"Company\"\n            value={company}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={3} sm={3}>\n          <TextField\n            required\n            id=\"startDate\"\n            name=\"startDate\"\n            label=\"Start Date\"\n            value={startDate}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={3} sm={3}>\n          <TextField\n            required\n            id=\"endDate\"\n            name=\"endDate\"\n            label=\"End Date\"\n            value={endDate}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={12}>\n          <TextField\n            required\n            id=\"position\"\n            name=\"position\"\n            label=\"Position\"\n            value={position}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={12}>\n          <TextField\n            required\n            id=\"tasks\"\n            name=\"tasks\"\n            label=\"Tasks\"\n            value={tasks}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n      </Grid>\n      <Button type=\"submit\" variant=\"contained\" color=\"secondary\" size=\"small\">\n        Submit\n      </Button>\n    </form>\n  );\n}\n\nexport default withStyles(styles)(WorkInfoForm);\n","const styles = {\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    margin: '0 1rem',\n    textAlign: 'center',\n    maxWidth: '600px',\n  },\n};\n\nexport default styles;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport WorkInfoForm from './WorkInfoForm';\nimport styles from '../styles/WorkInfoStyles';\n\nexport class WorkInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      company: 'Dell Technologies',\n      position: 'Front-End Developer',\n      tasks:\n        'Determining the structure and design of web pages. Developing features to enhance the user experience. Ensuring web design is optimized for smartphones',\n      startDate: '01/2017',\n      endDate: '03/2020',\n      isEditing: false,\n    };\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleEdit() {\n    this.setState({ isEditing: !this.state.isEditing });\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.toggleEdit();\n  }\n\n  render() {\n    const {\n      company,\n      position,\n      tasks,\n      startDate,\n      endDate,\n      isEditing,\n    } = this.state;\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        {isEditing ? (\n          <WorkInfoForm\n            company={company}\n            position={position}\n            tasks={tasks}\n            startDate={startDate}\n            endDate={endDate}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n          />\n        ) : (\n          <div className={classes.root}>\n            <Typography component=\"h1\" variant=\"h5\" gutterBottom>\n              Experience\n            </Typography>\n            <Typography variant=\"subtitle2\">Company</Typography>\n            <Typography gutterBottom>{company}</Typography>\n            <Typography variant=\"subtitle2\">Start Date - End Date</Typography>\n            <Typography gutterBottom>\n              {startDate} - {endDate}\n            </Typography>\n            <Typography variant=\"subtitle2\">Position</Typography>\n            <Typography gutterBottom>{position}</Typography>\n            <Typography variant=\"subtitle2\">Tasks</Typography>\n            <Typography gutterBottom>{tasks}</Typography>\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={this.toggleEdit}\n            >\n              Edit\n            </Button>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(WorkInfo);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction MadeBy() {\n  return (\n    <Typography variant=\"body2\" align=\"center\">\n      <Link color=\"inherit\" href=\"https://github.com/JCarlosLucio/cv-project\">\n        By Lucio\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default MadeBy;\n","const styles = (theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  info: {\n    backgroundColor: 'white',\n  },\n  paper: {\n    margin: theme.spacing(1, 0),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n});\n\nexport default styles;\n","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport GeneralInfo from './components/GeneralInfo';\nimport EducationInfo from './components/EducationInfo';\nimport WorkInfo from './components/WorkInfo';\nimport MadeBy from './components/MadeBy';\nimport styles from './styles/AppStyles';\n\nexport class App extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={3} sm={4} md={5} className={classes.image} />\n        <Grid\n          item\n          xs={9}\n          sm={8}\n          md={7}\n          className={classes.info}\n          component={Paper}\n          elevation={6}\n          square\n        >\n          <Grid container component=\"section\" className={classes.paper}>\n            <Grid item xs={12} sm={12} md={12}>\n              <GeneralInfo />\n            </Grid>\n            <Grid item xs={12} sm={12} md={12}>\n              <EducationInfo />\n            </Grid>\n            <Grid item xs={12} sm={12} md={12}>\n              <WorkInfo />\n            </Grid>\n            <Box mt={3}>\n              <MadeBy />\n            </Box>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}