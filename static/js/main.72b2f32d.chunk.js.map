{"version":3,"sources":["hooks/useInputComplexState.js","hooks/useToggleState.js","styles/GeneralInfoFormStyles.js","components/GeneralInfoForm.js","styles/GeneralInfoStyles.js","components/GeneralInfo.js","styles/EducationInfoFormStyles.js","components/EducationInfoForm.js","styles/EducationInfoStyles.js","components/EducationInfo.js","styles/WorkInfoFormStyles.js","components/WorkInfoForm.js","styles/WorkInfoStyles.js","components/WorkInfo.js","components/MadeBy.js","styles/AppStyles.js","App.js","serviceWorker.js","index.js"],"names":["useInputComplexState","initialState","useState","state","setState","e","target","name","value","useToggleState","initialVal","toggleState","styles","theme","root","display","flexDirection","alignItems","justifyContent","margin","maxWidth","avatar","spacing","backgroundColor","palette","secondary","main","container","withStyles","withTheme","fName","lName","email","phone","handleChange","handleSubmit","classes","onSubmit","className","Avatar","Grid","item","xs","sm","TextField","required","id","label","onChange","color","fullWidth","autoComplete","Button","type","variant","size","position","textAlign","minWidth","marginBottom","opacity","editBtn","top","right","zIndex","border","transition","generalInfo","isEditing","toggleEdit","Fragment","preventDefault","Typography","component","IconButton","onClick","school","title","date","educationInfo","company","tasks","startDate","endDate","workInfo","MadeBy","align","Link","href","Date","getFullYear","height","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","info","paper","CssBaseline","md","Paper","elevation","square","Box","mt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.72b2f32d.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction useInputComplexState(initialState) {\n  const [state, setState] = useState(initialState);\n\n  const handleChange = (e) =>\n    setState({ ...state, [e.target.name]: e.target.value });\n\n  return [state, handleChange];\n}\n\nexport default useInputComplexState;\n","import { useState } from 'react';\n\nfunction useToggleState(initialVal = false) {\n  const [state, setState] = useState(initialVal);\n  const toggleState = () => {\n    setState(!state);\n  };\n  return [state, toggleState];\n}\n\nexport default useToggleState;\n","const styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: '2rem 1rem 1.4rem 1rem',\n    maxWidth: '600px',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  container: {\n    margin: '0',\n  },\n});\n\nexport default styles;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from '../styles/GeneralInfoFormStyles';\n\nfunction GeneralInfoForm({\n  fName,\n  lName,\n  email,\n  phone,\n  handleChange,\n  handleSubmit,\n  classes,\n}) {\n  return (\n    <form onSubmit={handleSubmit} className={classes.root}>\n      <Avatar className={classes.avatar} />\n      <Grid container spacing={3} className={classes.container}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"fName\"\n            name=\"fName\"\n            label=\"First name\"\n            value={fName}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n            autoComplete=\"given-name\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"lName\"\n            name=\"lName\"\n            label=\"Last name\"\n            value={lName}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n            autoComplete=\"family-name\"\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            value={email}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"phone\"\n            name=\"phone\"\n            label=\"Phone Number\"\n            value={phone}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n      </Grid>\n      <Button type=\"submit\" variant=\"contained\" color=\"secondary\" size=\"small\">\n        Submit\n      </Button>\n    </form>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(GeneralInfoForm);\n","const styles = (theme) => ({\n  root: {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    margin: '2rem 1rem 1rem 1rem',\n    textAlign: 'center',\n    minWidth: '120px',\n    maxWidth: '600px',\n    '& h1': {\n      marginBottom: '1rem',\n    },\n    '& p': {\n      marginBottom: '1rem',\n    },\n    '&:hover $editBtn': {\n      opacity: 1,\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  editBtn: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    zIndex: 10,\n    border: '1px solid #F50057',\n    opacity: 0,\n    transition: 'all 0.3s ease-in-out',\n  },\n});\n\nexport default styles;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { withStyles } from '@material-ui/core/styles';\nimport useInputComplexState from '../hooks/useInputComplexState';\nimport useToggleState from '../hooks/useToggleState';\nimport GeneralInfoForm from './GeneralInfoForm';\nimport styles from '../styles/GeneralInfoStyles';\n\nfunction GeneralInfo({ classes }) {\n  const [generalInfo, handleChange] = useInputComplexState({\n    fName: 'John',\n    lName: 'Smith',\n    email: 'john.smith@email.com',\n    phone: '(620) 454-1799',\n  });\n\n  const [isEditing, toggleEdit] = useToggleState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    toggleEdit();\n  };\n\n  const { fName, lName, email, phone } = generalInfo;\n\n  return (\n    <React.Fragment>\n      {isEditing ? (\n        <GeneralInfoForm\n          fName={fName}\n          lName={lName}\n          email={email}\n          phone={phone}\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n        />\n      ) : (\n        <div className={classes.root}>\n          <Avatar className={classes.avatar} />\n          <Typography component=\"h1\" variant=\"h4\">\n            {fName} {lName}\n          </Typography>\n          <Typography variant=\"subtitle2\">Email</Typography>\n          <Typography>{email}</Typography>\n          <Typography variant=\"subtitle2\">Phone Number</Typography>\n          <Typography>{phone}</Typography>\n          <IconButton\n            color=\"secondary\"\n            size=\"small\"\n            onClick={toggleEdit}\n            className={classes.editBtn}\n          >\n            <EditIcon />\n          </IconButton>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(GeneralInfo);\n","const styles = {\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: '0rem 1rem 1.7rem 1rem',\n    maxWidth: '600px',\n  },\n  container: {\n    margin: '0 0 1rem 0',\n  },\n};\n\nexport default styles;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from '../styles/EducationInfoFormStyles';\n\nfunction EducationInfoForm({\n  school,\n  title,\n  date,\n  handleChange,\n  handleSubmit,\n  classes,\n}) {\n  return (\n    <form onSubmit={handleSubmit} className={classes.root}>\n      <Typography component=\"h1\" variant=\"h5\">\n        Edit Education\n      </Typography>\n      <Grid container spacing={3} className={classes.container}>\n        <Grid item xs={12} sm={12}>\n          <TextField\n            required\n            id=\"school\"\n            name=\"school\"\n            label=\"School\"\n            value={school}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={8} sm={8}>\n          <TextField\n            required\n            id=\"title\"\n            name=\"title\"\n            label=\"Title\"\n            value={title}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={4} sm={4}>\n          <TextField\n            required\n            id=\"date\"\n            name=\"date\"\n            label=\"Date\"\n            value={date}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n      </Grid>\n      <Button type=\"submit\" variant=\"contained\" color=\"secondary\" size=\"small\">\n        Submit\n      </Button>\n    </form>\n  );\n}\n\nexport default withStyles(styles)(EducationInfoForm);\n","const styles = {\n  root: {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    margin: '0 1rem 1rem 1rem',\n    textAlign: 'center',\n    minWidth: '190px',\n    maxWidth: '600px',\n    '& h1': {\n      marginBottom: '1rem',\n    },\n    '& p': {\n      marginBottom: '1rem',\n    },\n    '&:hover $editBtn': {\n      opacity: 1,\n    },\n  },\n  editBtn: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    zIndex: 10,\n    border: '1px solid #F50057',\n    opacity: 0,\n    transition: 'all 0.3s ease-in-out',\n  },\n};\n\nexport default styles;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { withStyles } from '@material-ui/core/styles';\nimport useInputComplexState from '../hooks/useInputComplexState';\nimport useToggleState from '../hooks/useToggleState';\nimport EducationInfoForm from './EducationInfoForm';\nimport styles from '../styles/EducationInfoStyles';\n\nfunction EducationInfo({ classes }) {\n  const [educationInfo, handleChange] = useInputComplexState({\n    school: 'Massachusetts Institute of Technology',\n    title: 'Software Engineering',\n    date: '2019',\n  });\n\n  const [isEditing, toggleEdit] = useToggleState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    toggleEdit();\n  };\n\n  const { school, title, date } = educationInfo;\n\n  return (\n    <React.Fragment>\n      {isEditing ? (\n        <EducationInfoForm\n          school={school}\n          title={title}\n          date={date}\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n        />\n      ) : (\n        <div className={classes.root}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Education\n          </Typography>\n          <Typography variant=\"subtitle2\">School</Typography>\n          <Typography>{school}</Typography>\n          <Typography variant=\"subtitle2\">Title of Study</Typography>\n          <Typography>{title}</Typography>\n          <Typography variant=\"subtitle2\">Class</Typography>\n          <Typography>{date}</Typography>\n          <IconButton\n            color=\"secondary\"\n            size=\"small\"\n            onClick={toggleEdit}\n            className={classes.editBtn}\n          >\n            <EditIcon />\n          </IconButton>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default withStyles(styles)(EducationInfo);\n","const styles = {\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: '0 1rem 1.5rem 1rem',\n    maxWidth: '600px',\n  },\n  container: {\n    margin: '0 0 1rem 0',\n  },\n};\n\nexport default styles;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from '../styles/WorkInfoFormStyles';\n\nfunction WorkInfoForm({\n  company,\n  position,\n  tasks,\n  startDate,\n  endDate,\n  handleChange,\n  handleSubmit,\n  classes,\n}) {\n  return (\n    <form onSubmit={handleSubmit} className={classes.root}>\n      <Typography component=\"h1\" variant=\"h5\">\n        Edit Experience\n      </Typography>\n      <Grid container spacing={3} className={classes.container}>\n        <Grid item xs={6} sm={6}>\n          <TextField\n            required\n            id=\"company\"\n            name=\"company\"\n            label=\"Company\"\n            value={company}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={3} sm={3}>\n          <TextField\n            required\n            id=\"startDate\"\n            name=\"startDate\"\n            label=\"Start Date\"\n            value={startDate}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={3} sm={3}>\n          <TextField\n            required\n            id=\"endDate\"\n            name=\"endDate\"\n            label=\"End Date\"\n            value={endDate}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={12}>\n          <TextField\n            required\n            id=\"position\"\n            name=\"position\"\n            label=\"Position\"\n            value={position}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={12}>\n          <TextField\n            required\n            id=\"tasks\"\n            name=\"tasks\"\n            label=\"Tasks\"\n            value={tasks}\n            onChange={handleChange}\n            color=\"secondary\"\n            fullWidth\n          />\n        </Grid>\n      </Grid>\n      <Button type=\"submit\" variant=\"contained\" color=\"secondary\" size=\"small\">\n        Submit\n      </Button>\n    </form>\n  );\n}\n\nexport default withStyles(styles)(WorkInfoForm);\n","const styles = {\n  root: {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    margin: '0 1rem',\n    textAlign: 'center',\n    minWidth: '200px',\n    maxWidth: '600px',\n    '& h1': {\n      marginBottom: '1rem',\n    },\n    '& p': {\n      marginBottom: '1rem',\n    },\n    '&:hover $editBtn': {\n      opacity: 1,\n    },\n  },\n  editBtn: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    zIndex: 10,\n    border: '1px solid #F50057',\n    opacity: 0,\n    transition: 'all 0.3s ease-in-out',\n  },\n};\n\nexport default styles;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { withStyles } from '@material-ui/core/styles';\nimport useInputComplexState from '../hooks/useInputComplexState';\nimport useToggleState from '../hooks/useToggleState';\nimport WorkInfoForm from './WorkInfoForm';\nimport styles from '../styles/WorkInfoStyles';\n\nfunction WorkInfo({ classes }) {\n  const [workInfo, handleChange] = useInputComplexState({\n    company: 'Dell Technologies',\n    position: 'Front-End Developer',\n    tasks:\n      'Determining the structure and design of web pages. Developing features to enhance the user experience. Ensuring web design is optimized for smartphones',\n    startDate: '01/2017',\n    endDate: '03/2020',\n  });\n\n  const [isEditing, toggleEdit] = useToggleState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    toggleEdit();\n  };\n\n  const { company, position, tasks, startDate, endDate } = workInfo;\n\n  return (\n    <React.Fragment>\n      {isEditing ? (\n        <WorkInfoForm\n          company={company}\n          position={position}\n          tasks={tasks}\n          startDate={startDate}\n          endDate={endDate}\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n        />\n      ) : (\n        <div className={classes.root}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Experience\n          </Typography>\n          <Typography variant=\"subtitle2\">Company</Typography>\n          <Typography>{company}</Typography>\n          <Typography variant=\"subtitle2\">Start Date - End Date</Typography>\n          <Typography>\n            {startDate} - {endDate}\n          </Typography>\n          <Typography variant=\"subtitle2\">Position</Typography>\n          <Typography>{position}</Typography>\n          <Typography variant=\"subtitle2\">Tasks</Typography>\n          <Typography>{tasks}</Typography>\n          <IconButton\n            color=\"secondary\"\n            size=\"small\"\n            onClick={toggleEdit}\n            className={classes.editBtn}\n          >\n            <EditIcon />\n          </IconButton>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default withStyles(styles)(WorkInfo);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction MadeBy() {\n  return (\n    <Typography variant=\"body2\" align=\"center\">\n      <Link color=\"inherit\" href=\"https://github.com/JCarlosLucio/cv-project\">\n        By Lucio\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default MadeBy;\n","const styles = (theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  info: {\n    backgroundColor: 'white',\n  },\n  paper: {\n    margin: theme.spacing(1, 0),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n});\n\nexport default styles;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport GeneralInfo from './components/GeneralInfo';\nimport EducationInfo from './components/EducationInfo';\nimport WorkInfo from './components/WorkInfo';\nimport MadeBy from './components/MadeBy';\nimport styles from './styles/AppStyles';\n\nfunction App({ classes }) {\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={3} sm={4} md={5} className={classes.image} />\n      <Grid\n        item\n        xs={9}\n        sm={8}\n        md={7}\n        className={classes.info}\n        component={Paper}\n        elevation={6}\n        square\n      >\n        <Grid container component=\"section\" className={classes.paper}>\n          <Grid item xs={12} sm={12} md={12}>\n            <GeneralInfo />\n          </Grid>\n          <Grid item xs={12} sm={12} md={12}>\n            <EducationInfo />\n          </Grid>\n          <Grid item xs={12} sm={12} md={12}>\n            <WorkInfo />\n          </Grid>\n          <Box mt={0}>\n            <MadeBy />\n          </Box>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}